{"remainingRequest":"/home/lansong/design-pattern/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lansong/design-pattern/node_modules/vuepress-theme-reco/components/Mode/ModePicker.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/home/lansong/design-pattern/node_modules/vuepress-theme-reco/components/Mode/ModePicker.vue","mtime":1708867320067},{"path":"/home/lansong/design-pattern/node_modules/css-loader/dist/cjs.js","mtime":1708865840487},{"path":"/home/lansong/design-pattern/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1708915344582},{"path":"/home/lansong/design-pattern/node_modules/postcss-loader/src/index.js","mtime":1708864883246},{"path":"/home/lansong/design-pattern/node_modules/stylus-loader/index.js","mtime":1708865858804},{"path":"/home/lansong/design-pattern/node_modules/cache-loader/dist/cjs.js","mtime":1708865839236},{"path":"/home/lansong/design-pattern/node_modules/vue-loader/lib/index.js","mtime":1708915344582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1vZGUtb3B0aW9ucwogIGJhY2tncm91bmQtY29sb3IgdmFyKC0tYmFja2dyb3VuZC1jb2xvcikKICBtaW4td2lkdGg6IDEyNXB4OwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAxZW07CiAgYm94LXNoYWRvdyB2YXIoLS1ib3gtc2hhZG93KTsKICBib3JkZXItcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogIC50aXRsZQogICAgbWFyZ2luLXRvcCAwCiAgICBtYXJnaW4tYm90dG9tIC42cmVtCiAgICBmb250LXdlaWdodCBib2xkCiAgICBjb2xvciB2YXIoLS10ZXh0LWNvbG9yKQogIC5jb2xvci1tb2RlLW9wdGlvbnMKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LXdyYXAgd3JhcAogICAgbGkKICAgICAgZmxleDogMTsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICBmb250LXNpemUgMTJweAogICAgICBjb2xvciB2YXIoLS10ZXh0LWNvbG9yKQogICAgICBsaW5lLWhlaWdodCAxOHB4CiAgICAgIHBhZGRpbmcgM3B4IDZweAogICAgICBib3JkZXItdG9wIDFweCBzb2xpZCAjNjY2CiAgICAgIGJvcmRlci1ib3R0b20gMXB4IHNvbGlkICM2NjYKICAgICAgYmFja2dyb3VuZC1jb2xvciB2YXIoLS1iYWNrZ3JvdW5kLWNvbG9yKQogICAgICBjdXJzb3IgcG9pbnRlcgogICAgICAmLmRhcmsKICAgICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyUmFkaXVzIDAgMCAkYm9yZGVyUmFkaXVzCiAgICAgICAgYm9yZGVyLWxlZnQgMXB4IHNvbGlkICM2NjYKICAgICAgJi5saWdodAogICAgICAgIGJvcmRlci1yYWRpdXM6IDAgJGJvcmRlclJhZGl1cyAkYm9yZGVyUmFkaXVzIDAKICAgICAgICBib3JkZXItcmlnaHQgMXB4IHNvbGlkICM2NjYKICAgICAgJi5hY3RpdmUKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50Q29sb3I7CiAgICAgICAgY29sb3IgI2ZmZgogICAgICAmOm5vdCguYWN0aXZlKQogICAgICAgIGJvcmRlci1yaWdodCAxcHggc29saWQgIzY2Ngo="},{"version":3,"sources":["ModePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModePicker.vue","sourceRoot":"node_modules/vuepress-theme-reco/components/Mode","sourcesContent":["<template>\n  <div class=\"mode-options\">\n    <h4 class=\"title\">Choose mode</h4>\n    <ul class=\"color-mode-options\">\n      <li\n        v-for=\"(mode, index) in modeOptions\"\n        :key=\"index\"\n        :class=\"getClass(mode.mode)\"\n        @click=\"selectMode(mode.mode)\"\n      >{{ mode.title }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport applyMode from './applyMode'\nexport default {\n  name: 'ModeOptions',\n\n  data () {\n    return {\n      modeOptions: [\n        { mode: 'dark', title: 'dark' },\n        { mode: 'auto', title: 'auto' },\n        { mode: 'light', title: 'light' }\n      ],\n      currentMode: 'auto'\n    }\n  },\n\n  mounted () {\n    // modePicker 开启时默认使用用户主动设置的模式\n    this.currentMode = localStorage.getItem('mode') || this.$themeConfig.mode || 'auto'\n\n    // Dark and Light autoswitches\n    // 为了避免在 server-side 被执行，故在 Vue 组件中设置监听器\n    var that = this\n    window.matchMedia('(prefers-color-scheme: dark)').addListener(() => {\n      that.$data.currentMode === 'auto' && applyMode(that.$data.currentMode)\n    })\n    window.matchMedia('(prefers-color-scheme: light)').addListener(() => {\n      that.$data.currentMode === 'auto' && applyMode(that.$data.currentMode)\n    })\n\n    applyMode(this.currentMode)\n  },\n\n  methods: {\n    selectMode (mode) {\n      if (mode !== this.currentMode) {\n        this.currentMode = mode\n        applyMode(mode)\n        localStorage.setItem('mode', mode)\n      }\n    },\n    getClass (mode) {\n      return mode !== this.currentMode ? mode : `${mode} active`\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.mode-options\n  background-color var(--background-color)\n  min-width: 125px;\n  margin: 0;\n  padding: 1em;\n  box-shadow var(--box-shadow);\n  border-radius: $borderRadius;\n  .title\n    margin-top 0\n    margin-bottom .6rem\n    font-weight bold\n    color var(--text-color)\n  .color-mode-options\n    display: flex;\n    flex-wrap wrap\n    li\n      flex: 1;\n      text-align: center;\n      font-size 12px\n      color var(--text-color)\n      line-height 18px\n      padding 3px 6px\n      border-top 1px solid #666\n      border-bottom 1px solid #666\n      background-color var(--background-color)\n      cursor pointer\n      &.dark\n        border-radius: $borderRadius 0 0 $borderRadius\n        border-left 1px solid #666\n      &.light\n        border-radius: 0 $borderRadius $borderRadius 0\n        border-right 1px solid #666\n      &.active\n        background-color: $accentColor;\n        color #fff\n      &:not(.active)\n        border-right 1px solid #666\n</style>\n"]}]}