{"remainingRequest":"/home/lansong/MyStudyNote/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lansong/MyStudyNote/node_modules/@qcyblm/vuepress-theme-vpx/components/NavLinks.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/home/lansong/MyStudyNote/node_modules/@qcyblm/vuepress-theme-vpx/components/NavLinks.vue","mtime":1708915343309},{"path":"/home/lansong/MyStudyNote/node_modules/css-loader/dist/cjs.js","mtime":1708865840487},{"path":"/home/lansong/MyStudyNote/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1708915344582},{"path":"/home/lansong/MyStudyNote/node_modules/postcss-loader/src/index.js","mtime":1708864883246},{"path":"/home/lansong/MyStudyNote/node_modules/stylus-loader/index.js","mtime":1708865858804},{"path":"/home/lansong/MyStudyNote/node_modules/cache-loader/dist/cjs.js","mtime":1708865839236},{"path":"/home/lansong/MyStudyNote/node_modules/vue-loader/lib/index.js","mtime":1708915344582}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5uYXYtbGlua3MNCiAgZGlzcGxheSBpbmxpbmUtYmxvY2sNCiAgcGFkZGluZyAwDQogIG1hcmdpbiAwDQogIGxpc3Qtc3R5bGUgbm9uZQ0KICBhDQogICAgbGluZS1oZWlnaHQgMS40cmVtDQogICAgY29sb3IgaW5oZXJpdA0KICAgICY6aG92ZXINCiAgICAgIGNvbG9yICRhY2NlbnRDb2xvcg0KICAgICYucm91dGVyLWxpbmstYWN0aXZlDQogICAgICBjb2xvciAkYWNjZW50Q29sb3INCiAgICAgIC5mYSwuZmFiLHNwYW4NCiAgICAgICAgY29sb3IgJGFjY2VudENvbG9yDQogIC5uYXYtaXRlbQ0KICAgIHBvc2l0aW9uIHJlbGF0aXZlDQogICAgZGlzcGxheSBpbmxpbmUtYmxvY2sNCiAgICBtYXJnaW4tbGVmdCAxLjVyZW0NCiAgICBsaW5lLWhlaWdodCAycmVtDQogICAgcGFkZGluZyAwDQogICAgYSANCiAgICAgICY6aG92ZXINCiAgICAgICAgY29sb3IgJGFjY2VudENvbG9yDQogICAgJjpmaXJzdC1jaGlsZA0KICAgICAgbWFyZ2luLWxlZnQgMA0KICAgIC5mYWIsLmZhDQogICAgICBjb2xvciAkbmF2aWNvbkNvbG9yDQoNCkBtZWRpYSAobWF4LXdpZHRoOiAkTVFNb2JpbGUpDQogIC5uYXYtbGlua3MNCiAgICAubmF2LWl0ZW0NCiAgICAgIG1hcmdpbi1sZWZ0IDANCg0KQG1lZGlhIChtaW4td2lkdGg6ICRNUU1vYmlsZSkNCiAgLm5hdi1saW5rcyBhDQogICAgJjpob3ZlciwgJi5yb3V0ZXItbGluay1hY3RpdmUNCiAgICAgIGNvbG9yICR0ZXh0Q29sb3INCiAgLm5hdi1pdGVtID4gYTpub3QoLmV4dGVybmFsKQ0KICAgICYucm91dGVyLWxpbmstYWN0aXZlDQogICAgICBib3JkZXItYm90dG9tIDJweCBzb2xpZCBsaWdodGVuKCRhY2NlbnRDb2xvciwgOCUpDQogICAgJjpob3ZlciwgJi5yb3V0ZXItbGluay1hY3RpdmUNCiAgICAgIG1hcmdpbi1ib3R0b20gLTJweA0KDQpbZGF0YS10aGVtZSA9IGRhcmsgXSAmDQogIC5uYXYtbGlua3MNCiAgICBhDQogICAgICBjb2xvciBpbmhlcml0DQogICAgICAmOmhvdmVyDQogICAgICAgIGNvbG9yOiAkZGFya1stLWFjY2VudENvbG9yXQ0KICAgICAgICBzcGFuDQogICAgICAgICAgY29sb3I6ICRkYXJrWy0tYWNjZW50Q29sb3JdDQogICAgICAmLnJvdXRlci1saW5rLWFjdGl2ZQ0KICAgICAgICBjb2xvcjogJGRhcmtbLS1hY2NlbnRDb2xvcl0NCiAgICAgICAgLmZhLC5mYWIsc3Bhbg0KICAgICAgICAgIGNvbG9yOiAkZGFya1stLWFjY2VudENvbG9yXQ0KICAgIC5uYXYtaXRlbQ0KICAgICAgYQ0KICAgICAgICAmOmhvdmVyDQogICAgICAgICAgY29sb3I6ICRkYXJrWy0tYWNjZW50Q29sb3JdDQogICAgICAuZmFiLC5mYQ0KICAgICAgICBjb2xvcjogJGRhcmtbLS1uYXZpY29uQ29sb3JdDQogIEBtZWRpYSAobWluLXdpZHRoOiAkTVFNb2JpbGUpDQogICAgLm5hdi1saW5rcw0KICAgICAgYQ0KICAgICAgICAmOmhvdmVyLCAmLnJvdXRlci1saW5rLWFjdGl2ZQ0KICAgICAgICAgIGNvbG9yOiAkZGFya1stLXRleHRDb2xvcl0NCiAgICAubmF2LWl0ZW0gPiBhOm5vdCguZXh0ZXJuYWwpDQogICAgICAmLnJvdXRlci1saW5rLWFjdGl2ZQ0KICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgbGlnaHRlbigkZGFya1stLWFjY2VudENvbG9yXSwgOCUpDQoNCg=="},{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NavLinks.vue","sourceRoot":"node_modules/@qcyblm/vuepress-theme-vpx/components","sourcesContent":["<template>\r\n  <ul\r\n    v-if=\"userLinks.length || repoLink\"\r\n    class=\"nav-links\"\r\n  >\r\n    <!-- user links -->\r\n    <li\r\n      v-for=\"item in userLinks\"\r\n      :key=\"item.link\"\r\n      class=\"nav-item\"\r\n    >\r\n      <DropdownLink\r\n        v-if=\"item.type === 'links'\"\r\n        :item=\"item\"\r\n      />\r\n      <NavLink\r\n        v-else\r\n        :item=\"item\"\r\n      />\r\n    </li>\r\n\r\n    <!-- repo link -->\r\n    <li v-if=\"repoLink\" class=\"nav-item\">\r\n      <a\r\n        :href=\"repoLink\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <i v-if=\"repo.icon\" :class=\"repo.icon\" />\r\n        <span>{{repoLabel}}</span>\r\n        <OutboundLink />\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport DropdownLink from '@theme/components/DropdownLink.vue'\r\nimport { resolveNavLinkItem } from '../util'\r\nimport NavLink from '@theme/components/NavLink.vue'\r\n\r\nexport default {\r\n  name: 'NavLinks',\r\n\r\n  components: {\r\n    NavLink,\r\n    DropdownLink\r\n  },\r\n\r\n  computed: {\r\n    userNav () {\r\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || []\r\n    },\r\n\r\n    nav () {\r\n      const { locales } = this.$site\r\n      if (locales && Object.keys(locales).length > 1) {\r\n        const currentLink = this.$page.path\r\n        const routes = this.$router.options.routes\r\n        const themeLocales = this.$site.themeConfig.locales || {}\r\n        const languageDropdown = {\r\n          icon: this.$themeLocaleConfig.icon || 'fa fa-globe',\r\n          text: this.$themeLocaleConfig.selectText || 'Languages',\r\n          ariaLabel: this.$themeLocaleConfig.ariaLabel || 'Select language',\r\n          items: Object.keys(locales).map(path => {\r\n            const locale = locales[path]\r\n            const text = themeLocales[path] && themeLocales[path].label || locale.lang\r\n            let link\r\n            // Stay on the current page\r\n            if (locale.lang === this.$lang) {\r\n              link = currentLink\r\n            } else {\r\n              // Try to stay on the same page\r\n              link = currentLink.replace(this.$localeConfig.path, path)\r\n              // fallback to homepage\r\n              if (!routes.some(route => route.path === link)) {\r\n                link = path\r\n              }\r\n            }\r\n            return { text, link }\r\n          })\r\n        }\r\n        return [...this.userNav, languageDropdown]\r\n      }\r\n      return this.userNav\r\n    },\r\n\r\n    userLinks () {\r\n      return (this.nav || []).map(link => {\r\n        return Object.assign(resolveNavLinkItem(link), {\r\n          items: (link.items || []).map(resolveNavLinkItem)\r\n        })\r\n      })\r\n    },\r\n\r\n    repo() {\r\n      return this.$site.themeConfig.repo\r\n    },\r\n    repoLink () {\r\n      const { repo } = this.$site.themeConfig\r\n      if (repo) {\r\n        return /^http[s]?:/.test(repo.owner)\r\n          ? repo\r\n          : `${ repo.platform }${ repo.owner }/${ repo.repositories || \"\" }`\r\n      }\r\n      return null\r\n    },\r\n    repoLabel () {\r\n      if (!this.repoLink) return\r\n      if (this.repo.label) {\r\n        return this.repo.label\r\n      }\r\n\r\n      const repoHost = this.repoLink.match(/^http[s]?:\\/\\/[^/]+/)[0]\r\n      const platforms = ['GitHub', 'GitLab', 'Bitbucket','Gitee']\r\n      for (let i = 0; i < platforms.length; i++) {\r\n        const platform = platforms[i]\r\n        if (new RegExp(platform, 'i').test(repoHost)) {\r\n          return platform\r\n        }\r\n      }\r\n\r\n      return 'Source'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n.nav-links\r\n  display inline-block\r\n  padding 0\r\n  margin 0\r\n  list-style none\r\n  a\r\n    line-height 1.4rem\r\n    color inherit\r\n    &:hover\r\n      color $accentColor\r\n    &.router-link-active\r\n      color $accentColor\r\n      .fa,.fab,span\r\n        color $accentColor\r\n  .nav-item\r\n    position relative\r\n    display inline-block\r\n    margin-left 1.5rem\r\n    line-height 2rem\r\n    padding 0\r\n    a \r\n      &:hover\r\n        color $accentColor\r\n    &:first-child\r\n      margin-left 0\r\n    .fab,.fa\r\n      color $naviconColor\r\n\r\n@media (max-width: $MQMobile)\r\n  .nav-links\r\n    .nav-item\r\n      margin-left 0\r\n\r\n@media (min-width: $MQMobile)\r\n  .nav-links a\r\n    &:hover, &.router-link-active\r\n      color $textColor\r\n  .nav-item > a:not(.external)\r\n    &.router-link-active\r\n      border-bottom 2px solid lighten($accentColor, 8%)\r\n    &:hover, &.router-link-active\r\n      margin-bottom -2px\r\n\r\n[data-theme = dark ] &\r\n  .nav-links\r\n    a\r\n      color inherit\r\n      &:hover\r\n        color: $dark[--accentColor]\r\n        span\r\n          color: $dark[--accentColor]\r\n      &.router-link-active\r\n        color: $dark[--accentColor]\r\n        .fa,.fab,span\r\n          color: $dark[--accentColor]\r\n    .nav-item\r\n      a\r\n        &:hover\r\n          color: $dark[--accentColor]\r\n      .fab,.fa\r\n        color: $dark[--naviconColor]\r\n  @media (min-width: $MQMobile)\r\n    .nav-links\r\n      a\r\n        &:hover, &.router-link-active\r\n          color: $dark[--textColor]\r\n    .nav-item > a:not(.external)\r\n      &.router-link-active\r\n        border-bottom: 2px solid lighten($dark[--accentColor], 8%)\r\n\r\n</style>\r\n"]}]}