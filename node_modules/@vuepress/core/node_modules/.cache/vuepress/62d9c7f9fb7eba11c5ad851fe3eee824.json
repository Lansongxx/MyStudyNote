{"remainingRequest":"/home/lansong/Lansongxx.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lansong/Lansongxx.github.io/node_modules/vuepress-theme-reco/components/AlgoliaSearchBox.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/lansong/Lansongxx.github.io/node_modules/vuepress-theme-reco/components/AlgoliaSearchBox.vue","mtime":1708867320067},{"path":"/home/lansong/Lansongxx.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1708865839236},{"path":"/home/lansong/Lansongxx.github.io/node_modules/babel-loader/lib/index.js","mtime":1708865839003},{"path":"/home/lansong/Lansongxx.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1708865839236},{"path":"/home/lansong/Lansongxx.github.io/node_modules/vue-loader/lib/index.js","mtime":1708865841767}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgcmVmLCBvbk1vdW50ZWQgfSBmcm9tICd2dWUnCmltcG9ydCB7IFJlY29JY29uIH0gZnJvbSAnQHZ1ZXByZXNzLXJlY28vY29yZS9saWIvY29tcG9uZW50cycKaW1wb3J0IHsgdXNlSW5zdGFuY2UgfSBmcm9tICdAdGhlbWUvaGVscGVycy9jb21wb3NhYmxlJwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7IFJlY29JY29uIH0sCgogIHByb3BzOiBbJ29wdGlvbnMnXSwKCiAgc2V0dXAgKHByb3BzLCBjdHgpIHsKICAgIGNvbnN0IGluc3RhbmNlID0gdXNlSW5zdGFuY2UoKQoKICAgIGNvbnN0IHBsYWNlaG9sZGVyID0gcmVmKHVuZGVmaW5lZCkKCiAgICBjb25zdCBpbml0aWFsaXplID0gKHVzZXJPcHRpb25zLCBsYW5nKSA9PiB7CiAgICAgIFByb21pc2UuYWxsKFsKICAgICAgICBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogImRvY3NlYXJjaCIgKi8gJ2RvY3NlYXJjaC5qcy9kaXN0L2Nkbi9kb2NzZWFyY2gubWluLmpzJyksCiAgICAgICAgaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6ICJkb2NzZWFyY2giICovICdkb2NzZWFyY2guanMvZGlzdC9jZG4vZG9jc2VhcmNoLm1pbi5jc3MnKQogICAgICBdKS50aGVuKChbZG9jc2VhcmNoXSkgPT4gewogICAgICAgIGRvY3NlYXJjaCA9IGRvY3NlYXJjaC5kZWZhdWx0CiAgICAgICAgY29uc3QgeyBhbGdvbGlhT3B0aW9ucyA9IHt9IH0gPSB1c2VyT3B0aW9ucwogICAgICAgIGRvY3NlYXJjaChPYmplY3QuYXNzaWduKAogICAgICAgICAge30sCiAgICAgICAgICB1c2VyT3B0aW9ucywKICAgICAgICAgIHsKICAgICAgICAgICAgaW5wdXRTZWxlY3RvcjogJyNhbGdvbGlhLXNlYXJjaC1pbnB1dCcsCiAgICAgICAgICAgIC8vICM2OTcgTWFrZSBkb2NzZWFyY2ggd29yayB3ZWxsIGF0IGkxOG4gbW9kZS4KICAgICAgICAgICAgYWxnb2xpYU9wdGlvbnM6IE9iamVjdC5hc3NpZ24oewogICAgICAgICAgICAgICdmYWNldEZpbHRlcnMnOiBbYGxhbmc6JHtsYW5nfWBdLmNvbmNhdChhbGdvbGlhT3B0aW9ucy5mYWNldEZpbHRlcnMgfHwgW10pCiAgICAgICAgICAgIH0sIGFsZ29saWFPcHRpb25zKSwKICAgICAgICAgICAgaGFuZGxlU2VsZWN0ZWQ6IChpbnB1dCwgZXZlbnQsIHN1Z2dlc3Rpb24pID0+IHsKICAgICAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lLCBoYXNoIH0gPSBuZXcgVVJMKHN1Z2dlc3Rpb24udXJsKQogICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAke3BhdGhuYW1lfSR7aGFzaH1gKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgKSkKICAgICAgfSkKICAgIH0KCiAgICBjb25zdCB1cGRhdGUgPSAob3B0aW9ucywgbGFuZykgPT4gewogICAgICBpbnN0YW5jZS4kZWwuaW5uZXJIVE1MID0gJzxpbnB1dCBpZD0iYWxnb2xpYS1zZWFyY2gtaW5wdXQiIGNsYXNzPSJzZWFyY2gtcXVlcnkiPicKICAgICAgaW5zdGFuY2UuaW5pdGlhbGl6ZShvcHRpb25zLCBsYW5nKQogICAgfQoKICAgIG9uTW91bnRlZCgoKSA9PiB7CiAgICAgIGluaXRpYWxpemUocHJvcHMub3B0aW9ucywgaW5zdGFuY2UuJGxhbmcpCiAgICAgIHBsYWNlaG9sZGVyLnZhbHVlID0gaW5zdGFuY2UuJHNpdGUudGhlbWVDb25maWcuc2VhcmNoUGxhY2Vob2xkZXIgfHwgJycKICAgIH0pCgogICAgcmV0dXJuIHsgcGxhY2Vob2xkZXIsIGluaXRpYWxpemUsIHVwZGF0ZSB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgICRsYW5nIChuZXdWYWx1ZSkgewogICAgICB0aGlzLnVwZGF0ZSh0aGlzLm9wdGlvbnMsIG5ld1ZhbHVlKQogICAgfSwKCiAgICBvcHRpb25zIChuZXdWYWx1ZSkgewogICAgICB0aGlzLnVwZGF0ZShuZXdWYWx1ZSwgdGhpcy4kbGFuZykKICAgIH0KICB9Cn0pCg=="},{"version":3,"sources":["AlgoliaSearchBox.vue"],"names":[],"mappings":";AAgBA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AlgoliaSearchBox.vue","sourceRoot":"node_modules/vuepress-theme-reco/components","sourcesContent":["<template>\n  <form\n    id=\"search-form\"\n    class=\"algolia-search-wrapper search-box\"\n    role=\"search\"\n  >\n    <reco-icon icon=\"reco-search\" />\n    <input\n      id=\"algolia-search-input\"\n      class=\"search-query\"\n      :placeholder=\"placeholder\"\n    >\n  </form>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from 'vue'\nimport { RecoIcon } from '@vuepress-reco/core/lib/components'\nimport { useInstance } from '@theme/helpers/composable'\n\nexport default defineComponent({\n  components: { RecoIcon },\n\n  props: ['options'],\n\n  setup (props, ctx) {\n    const instance = useInstance()\n\n    const placeholder = ref(undefined)\n\n    const initialize = (userOptions, lang) => {\n      Promise.all([\n        import(/* webpackChunkName: \"docsearch\" */ 'docsearch.js/dist/cdn/docsearch.min.js'),\n        import(/* webpackChunkName: \"docsearch\" */ 'docsearch.js/dist/cdn/docsearch.min.css')\n      ]).then(([docsearch]) => {\n        docsearch = docsearch.default\n        const { algoliaOptions = {} } = userOptions\n        docsearch(Object.assign(\n          {},\n          userOptions,\n          {\n            inputSelector: '#algolia-search-input',\n            // #697 Make docsearch work well at i18n mode.\n            algoliaOptions: Object.assign({\n              'facetFilters': [`lang:${lang}`].concat(algoliaOptions.facetFilters || [])\n            }, algoliaOptions),\n            handleSelected: (input, event, suggestion) => {\n              const { pathname, hash } = new URL(suggestion.url)\n              this.$router.push(`${pathname}${hash}`)\n            }\n          }\n        ))\n      })\n    }\n\n    const update = (options, lang) => {\n      instance.$el.innerHTML = '<input id=\"algolia-search-input\" class=\"search-query\">'\n      instance.initialize(options, lang)\n    }\n\n    onMounted(() => {\n      initialize(props.options, instance.$lang)\n      placeholder.value = instance.$site.themeConfig.searchPlaceholder || ''\n    })\n\n    return { placeholder, initialize, update }\n  },\n\n  watch: {\n    $lang (newValue) {\n      this.update(this.options, newValue)\n    },\n\n    options (newValue) {\n      this.update(newValue, this.$lang)\n    }\n  }\n})\n</script>\n\n<style lang=\"stylus\">\n.algolia-search-wrapper\n  & > span\n    vertical-align middle\n  .algolia-autocomplete\n    line-height normal\n    .ds-dropdown-menu\n      background-color var(--background-color)\n      border-radius $borderRadius\n      font-size 15px\n      margin 6px 0 0\n      padding 4px\n      text-align left\n      box-shadow var(--box-shadow)\n      &:before\n        display none\n      [class*=ds-dataset-]\n        background-color var(--background-color)\n        border none\n        padding 0\n      .ds-suggestions\n        margin-top 0\n      .ds-suggestion\n        border-bottom 1px solid var(--border-color)\n    .algolia-docsearch-suggestion--highlight\n      color $accentColor\n    .algolia-docsearch-suggestion\n      border-color var(--border-color)\n      padding 0\n      .algolia-docsearch-suggestion--category-header\n        padding 5px 10px\n        margin-top 0\n        background $accentColor\n        color #fff\n        font-weight 600\n        .algolia-docsearch-suggestion--highlight\n          background rgba(255, 255, 255, 0.6)\n      .algolia-docsearch-suggestion--wrapper\n        background var(--background-color)\n        padding 0\n      .algolia-docsearch-suggestion--title\n        font-weight 600\n        margin-bottom 0\n        color var(--text-color)\n      .algolia-docsearch-suggestion--subcategory-column\n        vertical-align top\n        padding 5px 7px 5px 5px\n        border-color var(--border-color)\n        background var(--background-color)\n        &:after\n          display none\n      .algolia-docsearch-suggestion--subcategory-column-text\n        color var(--text-color)\n    .algolia-docsearch-footer\n      border-color var(--border-color)\n      background var(--background-color)\n    .ds-cursor .algolia-docsearch-suggestion--content\n      background-color #e7edf3 !important\n      color $textColor\n\n@media (min-width: $MQMobile)\n  .algolia-search-wrapper\n    .algolia-autocomplete\n      .algolia-docsearch-suggestion\n        .algolia-docsearch-suggestion--subcategory-column\n          float none\n          width 150px\n          min-width 150px\n          display table-cell\n        .algolia-docsearch-suggestion--content\n          float none\n          display table-cell\n          width 100%\n          vertical-align top\n        .ds-dropdown-menu\n          min-width 515px !important\n\n@media (max-width: $MQMobile)\n  .algolia-search-wrapper\n    .ds-dropdown-menu\n      min-width calc(100vw - 4rem) !important\n      max-width calc(100vw - 4rem) !important\n    .algolia-docsearch-suggestion--wrapper\n      padding 5px 7px 5px 5px !important\n    .algolia-docsearch-suggestion--subcategory-column\n      padding 0 !important\n      background var(--border-color) !important\n    .algolia-docsearch-suggestion--subcategory-column-text:after\n      content \" > \"\n      font-size 10px\n      line-height 14.4px\n      display inline-block\n      width 5px\n      margin -3px 3px 0\n      vertical-align middle\n\n</style>\n"]}]}