{"remainingRequest":"/home/lansong/MyStudyNote/node_modules/babel-loader/lib/index.js??ref--3-1!/home/lansong/MyStudyNote/node_modules/@vuepress/core/lib/client/serverEntry.js","dependencies":[{"path":"/home/lansong/MyStudyNote/node_modules/@vuepress/core/lib/client/serverEntry.js","mtime":1708915344173},{"path":"/home/lansong/MyStudyNote/node_modules/cache-loader/dist/cjs.js","mtime":1708865839236},{"path":"/home/lansong/MyStudyNote/node_modules/babel-loader/lib/index.js","mtime":1708915344507}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICIvaG9tZS9sYW5zb25nL015U3R1ZHlOb3RlL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgIi9ob21lL2xhbnNvbmcvTXlTdHVkeU5vdGUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmpzIjsKaW1wb3J0ICIvaG9tZS9sYW5zb25nL015U3R1ZHlOb3RlL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiL2hvbWUvbGFuc29uZy9NeVN0dWR5Tm90ZS9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuZmluYWxseS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBjcmVhdGVBcHAgfSBmcm9tICcuL2FwcCc7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGV4dCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBjcmVhdGVBcHAodHJ1ZQogICAgLyogaXNTZXJ2ZXIgKi8KICAgICkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgYXBwID0gX3JlZi5hcHAsCiAgICAgICAgICByb3V0ZXIgPSBfcmVmLnJvdXRlcjsKICAgICAgdmFyIHVybCA9IGNvbnRleHQudXJsOwogICAgICB2YXIgZnVsbFBhdGggPSByb3V0ZXIucmVzb2x2ZSh1cmwpLnJvdXRlLmZ1bGxQYXRoOwoKICAgICAgaWYgKGZ1bGxQYXRoICE9PSB1cmwpIHsKICAgICAgICByZXR1cm4gcmVqZWN0KHsKICAgICAgICAgIHVybDogZnVsbFBhdGgKICAgICAgICB9KTsKICAgICAgfSAvLyBlcnJvciBoYW5kbGVkIGluIG9uUmVhZHkKCgogICAgICByb3V0ZXIucHVzaCh1cmwpWyJjYXRjaCJdKGZ1bmN0aW9uICgpIHt9KTsKICAgICAgcm91dGVyLm9uUmVhZHkoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiByZXNvbHZlKGFwcCk7CiAgICAgIH0sIHJlamVjdCk7CiAgICB9KTsKICB9KTsKfSk7"},{"version":3,"sources":["/home/lansong/MyStudyNote/node_modules/@vuepress/core/lib/client/serverEntry.js"],"names":["createApp","context","Promise","resolve","reject","then","app","router","url","fullPath","route","push","onReady"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,gBAAe,UAAAC,OAAO;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACzDJ,IAAAA,SAAS,CAAC;AAAK;AAAN,KAAT,CAA+BK,IAA/B,CAAoC,gBAAqB;AAAA,UAAlBC,GAAkB,QAAlBA,GAAkB;AAAA,UAAbC,MAAa,QAAbA,MAAa;AACvD,UAAQC,GAAR,GAAgBP,OAAhB,CAAQO,GAAR;AACA,UAAQC,QAAR,GAAqBF,MAAM,CAACJ,OAAP,CAAeK,GAAf,EAAoBE,KAAzC,CAAQD,QAAR;;AAEA,UAAIA,QAAQ,KAAKD,GAAjB,EAAsB;AACpB,eAAOJ,MAAM,CAAC;AAAEI,UAAAA,GAAG,EAAEC;AAAP,SAAD,CAAb;AACD,OANsD,CAQvD;;;AACAF,MAAAA,MAAM,CAACI,IAAP,CAAYH,GAAZ,WAAuB,YAAM,CAAE,CAA/B;AACAD,MAAAA,MAAM,CAACK,OAAP,CAAe;AAAA,eAAMT,OAAO,CAACG,GAAD,CAAb;AAAA,OAAf,EAAmCF,MAAnC;AACD,KAXD;AAYD,GAbyB,CAAJ;AAAA,CAAtB","sourcesContent":["import { createApp } from './app'\n\nexport default context => new Promise((resolve, reject) => {\n  createApp(true /* isServer */).then(({ app, router }) => {\n    const { url } = context\n    const { fullPath } = router.resolve(url).route\n\n    if (fullPath !== url) {\n      return reject({ url: fullPath })\n    }\n\n    // error handled in onReady\n    router.push(url).catch(() => {})\n    router.onReady(() => resolve(app), reject)\n  })\n})\n"]}]}